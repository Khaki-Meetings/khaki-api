plugins {
    id 'org.liquibase.gradle' version '2.0.4'
    id 'org.springframework.boot' version '2.3.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
}

sourceCompatibility = 11
targetCompatibility = 11

group 'com.getkhaki'
version '1.0-SNAPSHOT'

Properties applicationProps = new Properties()
applicationProps.load(new FileInputStream("src/main/resources/application.properties"))

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    liquibaseRuntime 'org.liquibase:liquibase-core:4.2.2'
    liquibaseRuntime 'org.springframework.boot:spring-boot-starter-data-jpa'
    liquibaseRuntime 'org.liquibase.ext:liquibase-hibernate5:4.2.2'
    liquibaseRuntime 'org.mariadb.jdbc:mariadb-java-client:2.7.0'
    liquibaseRuntime 'com.h2database:h2:1.4.200'
    liquibaseRuntime sourceSets.main.output

    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-oauth2-resource-server'
    implementation 'org.springframework.security:spring-security-oauth2-jose'
    implementation 'org.springframework.security:spring-security-config'
    implementation 'com.auth0:auth0:1.26.0'
    testImplementation 'org.springframework.security:spring-security-test'

    implementation 'org.liquibase.ext:liquibase-hibernate5:4.2.2'
    implementation 'org.liquibase:liquibase-core:4.2.2'
    implementation 'com.h2database:h2:1.4.200'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.modelmapper.extensions:modelmapper-spring:2.+'
    implementation 'org.mariadb.jdbc:mariadb-java-client:2.7.0'
    implementation 'org.modelmapper:modelmapper:2.+'
    implementation 'javax.inject:javax.inject:1'
    implementation 'io.rest-assured:spring-mock-mvc:4.3.1'
    implementation 'io.rest-assured:xml-path:4.3.1'
    implementation 'com.opencsv:opencsv:5.3'

    implementation 'com.google.api-client:google-api-client:1.30.11'
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.31.1'
    implementation 'com.google.apis:google-api-services-admin-directory:directory_v1-rev20191003-1.30.8'
    implementation 'com.google.apis:google-api-services-calendar:v3-rev305-1.23.0'

    testImplementation "org.mockito:mockito-core:2.+"
    testImplementation("org.assertj:assertj-core:3.17.2")
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.21'

    compileOnly 'org.projectlombok:lombok:1.18.12'
    testCompileOnly 'org.projectlombok:lombok:1.18.12'

    annotationProcessor 'org.projectlombok:lombok:1.18.12'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
}

test {
    useJUnitPlatform()
}

diff.dependsOn assemble
diffChangeLog.dependsOn assemble

if (gradle.startParameter.taskNames.contains('diffChangeLog') && !project.ext.has('changeLogFile')) {
    throw new InvalidUserDataException('changeLogFile is required with diffChagneLog')
}

def changeLogFileName
if (project.ext.has('changeLogFile')) {
    changeLogFileName = "${project.ext.changeLogFile}"
} else {
    changeLogFileName = "liquibase/master-changelog.yaml"
}

liquibase {
    activities {
        main {
//            classpath "$projectDir/src/main/resources"
            changeLogFile changeLogFileName
            referenceUrl "hibernate:spring:com.getkhaki.api.bff.persistence.models?dialect=" + System.getenv("JDBC_DATABASE_DIALECT") + "&hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy&hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy"
            url System.getenv("JDBC_DATABASE_URL")
            username System.getenv("JDBC_DATABASE_USERNAME")
            password System.getenv("JDBC_DATABASE_PASSWORD")
        }
    }
}
